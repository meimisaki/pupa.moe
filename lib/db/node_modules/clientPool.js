'use strict';

var redis = require('redis');

var Heap = require('../../heap');

var config = require('../../config');

var limit = config.REDIS_CLIENT_LIMIT || 1;

var stack = [];
for (var i = 0 ; i < limit ; ++i) {
	stack.push(i);
}

var clients = new Array(limit);

var heap = new Heap();

function recycle(key) {
	stack.push(key);
	heap.pop(key);
	clients[key] = null;
}

function acquire() {
	if (!stack.length) {
		var key = heap.top();
		heap.update(key, heap.priority(key) + 1);
		return clients[key];
	}
	var client = redis.createClient();
	var key = client.key = stack.pop();
	heap.push(key, 1);
	var boundRecycle = recycle.bind(null, key);
	return clients[key] = client.on('end', boundRecycle).on('error', boundRecycle);
}

function release(client) {
	var key = client.key;
	heap.update(key, heap.priority(key) - 1);
}

function drain() {
	while (!heap.empty()) {
		var key = heap.top();
		clients[key].end();
		recycle(key);
	}
}

module.exports = {
	acquire: acquire,
	release: release,
	drain: drain
};
