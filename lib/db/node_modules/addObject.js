'use strict';

var Syncher = require('../../syncher');

var each = require('../../each');
var uuid = require('../../uuid');

var reserved = require('reserved');

function addObject(key, obj, callback) {
	var client = this._;
	var last = key.split(':').pop();
	var id = obj.id || uuid();
	var date = new Date();
	var syncher = new Syncher();
	if (last != key) syncher.add(client.zadd.bind(client, key + '-list', +date, id));
	syncher.add(function (fn) {
		var args = [last + ':' + id];
		each(obj, function (val, key) {
			if (!reserved[key]) args.push(key, val);
		});
		args.push('created_time', date.toISOString(), fn);
		client.hmset.apply(client, args);
	}, client.zadd.bind(client, last + '-list', +date, id)).run(function () {
		for (var key = 0 ; key < arguments.length ; ++key) {
			var err = arguments[key][0];
			if (err) return callback(err);
		}
		callback(null, id);
	});
}

module.exports = addObject;
