'use strict';

var each = require('../../each');
var extend = require('../../extend');

function getObject(key, id) {
	var client = this._;
	var args = Array.prototype.slice.call(arguments, 2);
	var callback = args.pop();
	var fields = args.pop();
	if (!fields) {
		return client.hgetall(key + ':' + id, function (err, obj) {
			if (err) return callback(err);
			if (!obj) return callback(new Error('object not found'));
			callback(null, extend(obj, {id: id}));
		});
	}
	client.hmget.apply(client, [key + ':' + id].concat(fields, function (err, replies) {
		if (err) return callback(err);
		var obj = {};
		each(replies, function (val, key) {
			obj[fields[key]] = val;
		});
		callback(null, extend(obj, {id: id}));
	}));
}

module.exports = getObject;
